FORMAT: 1A
HOST: http://www.google.com

# iMenzies
iMenzies API is for managing the *iMenzies* system.

# Orders
API Description for Orders

# Group Customers
## POST /users/register
Register a new user.
+ Request (application/json)

        [{"username":"username", "password":"password", "email":"e-mail"}]

+ Response 200 (application/json)
        
        [{"id":1}]

+ Response 409 (application/json)

        [{"code":1, "message":"Duplicate username"}]
        [{"code":2, "message":"Duplicate e-mail"}]

## POST /users/login
Login a user
+ Request (application/json)

        {"username":"username", "password":"password"}
        
+ Response 200 (application/json)
        
        {"id":1, "created":"2013-11-20 10:45:35", "lastlogin":"2013-11-20 10:45:36", "email":"user@domain.com"}

+ Response 404 (application/json)

        {"code":10, "message":"User not found"}
        
+ Response 409 (application/json)

        {"code":11, "message":"Invalid password"}

## POST /users/changepassword
Change user password
+ Request (application/json)

        {"username":"username", "password":"password"}
        
+ Response 200 (application/json)

        {}

+ Response 404 (application/json)

        {"code":10, "message":"User not found"}
        
        

# Group Materials

# Group Orders

## Contracts Admin Collection [/admin/orders/contracts]
### List all Contracts [GET]
+ Response 200 (application/json)

        [{
            "id":1,
            "title":"Spiderman",
            "customer":{
                "id":1
            }
        },{
            "id":2,
            "title":"The Guardian",
            "customer":{
                "id":1
            }
        }]

## Contracts Admin Search [/admin/search/orders/contracts/{search}]
### Search for Contracts [GET]
Finds all contracts by specified search filter
+ Parameters
    + search (optional, `Superman`) ... Value to search for from contracts or customers. Has example value.

+ Response 200 (application/json)

        [{
            "id":1,
            "title":"Spiderman",
            "customer":{
                "id":1
            }
        },{
            "id":2,
            "title":"The Guardian",
            "customer":{
                "id":1
            }
        }]
        
## Contract Admin [/admin/orders/contracts/{id}]
### Retrieve contract [GET]
+ Parameters
    + id (required, `1`) ... Numeric `id` of the Contract to perform action with. Has example value.

+ Response 200 (application/json)

        [{
            "id":1,
            "title":"Spiderman",
            "customer":{
                "id":1
            }
        }]

### Edit a contract [POST]
Edits one contract
+ Parameters
    + id (required, `1`) ... Edits one contract as specified by `id`.

+ Request (application/json)

        [{
            "title":"Spiderman"
        }]

+ Response 201 (application/json)
    
        [{
            "title":"Spiderman"
        }]

### Removes a contract [DELETE]
+ Parameters
    + id (required, `1`) ... Numeric `id` of the Contract to perform action with. Has example value.
+ Response 204

## Contracts Collection [/orders/contracts]
### List all Contracts [GET]
+ Response 200 (application/json)

        [{
          "id": 1, "title": "Spiderman"
        }, {
          "id": 2, "title": "The Guardian"
        }]

### Create an order [POST]
+ Request (application/json)

        { "title": "Superman" }

+ Response 201 (application/json)

        { "id": 3, "title": "Superman" }

## Contract [/orders/contracts/{id}]
A single Contract object with all its details

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Contract to perform action with. Has example value.

### Retrieve a Contract [GET]
+ Response 200 (application/json)

    + Header

            X-My-Header: The Value

    + Body

            { "id": 2, "title": "The Guardian" }

### Remove a Contract [DELETE]
+ Response 204
        

## Standing Orders Collection [/orders/standing]
### List all Standing Orders [GET]
+ Response 200 (application/json)

        [{
            "id":1
        },{
            "id":2
        }]

## Demand Collection [/orders/demand]
### List all demands [GET]
+ Response 200 (application/json)

        [{
            "id":1
        },{
            "id":2
        }]


## Changing Orders Collection [/orders/changing]
### List all changing orders [GET]
+ Response 200 (application/json)

        [{
            "id":1
        },{
            "id":2
        }]




# Group Claims
## Delivery Claims

### Delivery Claims [/claims/deliveries]
#### List all Delivery Claims [GET]
+ Response 200 (application/json)

        [{
            "id":1, "title":"Spiderman"
        },{
            "id":2, "title":"The Guardian"
        }]
    
#### Create new Delivery Claim [POST]
+ Request (application/json)

        {"id":1}
    
+ Response 201 (application/json)
    
        {"id":1}


### Single Delivery Claim [/claims/deliveries/{id}]
#### Retrieve a Delivery Claim [GET]
+ Response 200 (application/json)

        {"id":1}
    
#### Delete a Delivery Claim [DELETE]
+ Response 204


# Return Claims [/claims/returns]
### List all Returns Claims [GET]
+ Response 200 (application/json)

        [{
            "id":1, "title":"Spiderman"
        },{
            "id":2, "title":"The Guardian"
        }]

### Create new Returns Claim [POST]
+ Request (application/json)

        {"id":1}
    
+ Response 201 (application/json)
    
        {"id":1}


## Single Returns Claim [/claims/returns/{id}]
### Retrieve a Returns Claim [GET]
+ Response 200 (application/json)

        {"id":1}
    
### Delete a Returns Claim [DELETE]
+ Response 204

        
# Group Documents

## Delivery notes [/documents/deliveries]
### List all delivery notes [GET]
+ Response 200 (application/json)

        [{
            "id":1
        },{
            "id":2
        }]

## Credit advice notes [/documents/credits]
### List all credit advice notes [GET]
+ Response 200 (application/json)

        [{
            "id":1
        },{
            "id":2
        }]
        
        
## Allocation Advice notes [/documents/allocations]
### List all allocation advice notes [GET]
+ Response 200 (application/json)

        [{
            "id":1
        },{
            "id":2
        }]
        
## Final delivery notes [/documents/finaldeliveries]
### List all final delivery notes [GET]
+ Response 200 (application/json)

        [{
            "id":1
        },{
            "id":2
        }]
        
## Invoices [/documents/invoices]
### List all invoices
+ Response 200 (application/json)

        [{
            "id":1
        },{
            "id":2
        }]
        
## Recall notes [/documents/recalls]
### List all recall notes
+ Response 200 (application/json)

        [{
            "id":1
        },{
            "id":2
        }]
        
        