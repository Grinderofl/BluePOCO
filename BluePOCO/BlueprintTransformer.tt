<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Windows.Forms" #>
<#@ assembly name="$(SolutionDir)\BluePOCO\bin\Debug\ApiTransformer.dll" #>
<#@ assembly name="$(SolutionDir)BluePOCO\bin\Debug\RestSharp.dll"#>
<#@ import namespace="ApiTransformer"#>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="RestSharp"#>
<#@ output extension=".cs" #>
<#
	var filename = "Source.txt";
	var filepath = Path.Combine(Path.GetDirectoryName(this.Host.ResolvePath("")), "BluePOCO", filename);
	var list = Transformer.GetMethodList(File.ReadAllText(filepath));
	string str;
#>
using System.ComponentModel;
using Restcoration;
using RestSharp;
namespace BluePOCO 
{

	<#foreach(var item in list){#>

	<#
		var methodList = new List<string>();
		foreach(var response in item.Responses)
		{
			//methodList.Add(string.Format("
		}
	#>


	[Rest(Method = Method.<#=item.Method#>)]
	public class <# str = item.Resource.Length > 1 ? string.Join("", item.Resource.Split('/').Select(x => x.Length > 0 ? x.Substring(0, 1).ToUpper() + x.Substring(1) : "")) : "Root";#><#=str + "Request"#>
	{
	}

	<#foreach(var response in item.Responses){#>
public class <#=str+response.Code#> 
	{
	}
	<#}#>
	<#}#>

}